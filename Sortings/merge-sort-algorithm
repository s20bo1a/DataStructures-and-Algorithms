class Solution {
       void merge(int arr[],int low, int mid ,int high){
        int left=low;
        int right=mid+1;
        int temp[]=new int[arr.length];
        int k=0;
        
        while(left <= mid && right <=high){
            
            if(arr[left]<=arr[right]){
                temp[k++]=arr[left];
                left++;
                
            }
           else{
                temp[k++]=arr[right];
                right++;
            }
            
        }
        while(left <=mid){
            temp[k++]=arr[left];
            left++;
        }
        
        while(right <= high ){
            temp[k++]=arr[right];
            right++;
        }
        
        for(int i=low;i<=high;i++){
            
           arr[i]=temp[i-low];
        }
        
        
    }
    void mergeSort(int arr[], int l, int r) {
        // code here
        
        if(l>=r){
            return ;
        }
        
        int mid=(l+r)/2;
        mergeSort(arr,l,mid);
        mergeSort(arr,mid+1,r);
        
        merge(arr,l,mid,r);
    }
    

}
